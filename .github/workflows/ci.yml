name: CI

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build_test_push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout-code
        uses: actions/checkout@v4

      # Optionnel : installer docker-compose si besoin
      # - name: Install docker compose
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y docker-compose

      # - name: Build and start docker compose
      #   run: docker compose up -d --build

      # - name: Run tests
      #   run: echo "No tests yet"

      # - name: Stop docker compose
      #   run: docker compose down

      - name: Extract version from tag
        if: startsWith(github.ref, 'refs/tags/v')
        id: extract_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Create .env file for backend
        run: |
          echo "CORS_ALLOW_ORIGIN=http://192.168.2.100:32022" > ./back/.env

      - name: Build back image
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
            docker build -t ghcr.io/sown21/budget/back:$VERSION -t ghcr.io/sown21/budget/back:latest ./back
          else
            docker build -t ghcr.io/sown21/budget/back:${GITHUB_SHA} ./back
          fi

      - name: Create .env file for frontend
        run: |
          echo "VITE_API_URL=http://192.168.2.100:32023/api/v1" > ./front/.env

      - name: Build front image
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
            docker build -t ghcr.io/sown21/budget/front:$VERSION -t ghcr.io/sown21/budget/front:latest ./front
          else
            docker build -t ghcr.io/sown21/budget/front:${GITHUB_SHA} ./front
          fi

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push back image
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
            docker push ghcr.io/sown21/budget/back:$VERSION
            docker push ghcr.io/sown21/budget/back:latest
          else
            docker push ghcr.io/sown21/budget/back:${GITHUB_SHA}
          fi

      - name: Push front image
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
            docker push ghcr.io/sown21/budget/front:$VERSION
            docker push ghcr.io/sown21/budget/front:latest
          else
            docker push ghcr.io/sown21/budget/front:${GITHUB_SHA}
          fi

      - name: Clone cluster repo
        run: |
          git clone https://Sown21:${{ secrets.CLUSTER_REPO_PAT }}@github.com/Sown21/cluster.git
  
      - name: Update manifests with new image
        run: | 
          cd cluster
          sed -i "s|ghcr.io/sown21/budget/back:.*|ghcr.io/sown21/budget/back:${{ steps.extract_version.outputs.VERSION }}|g" app/budget/budget-back.yaml
          sed -i "s|ghcr.io/sown21/budget/front:.*|ghcr.io/sown21/budget/front:${{ steps.extract_version.outputs.VERSION }}|g" app/budget/budget-front.yaml

      - name: Commit and push updated manifests
        run: |
          cd cluster
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add app/budget/budget-back.yaml app/budget/budget-front.yaml
          git commit -m "fix: update budget manifests with image tag ${VERSION}"
          git push